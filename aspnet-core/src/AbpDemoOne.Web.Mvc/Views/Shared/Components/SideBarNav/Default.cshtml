@using Abp.Collections.Extensions
@using AbpDemoOne.Web.Views
@using AbpDemoOne.Web.Views.Shared.Components.SideBarNav
@model SideBarNavViewModel
@{
    var calculateMenuUrl = new Func<string, string>((url) =>
    {
        if (string.IsNullOrEmpty(url))
        {
            return ApplicationPath;
        }

        if (UrlChecker.IsRooted(url))
        {
            return url;
        }

        return ApplicationPath + url;
    });
}
<li>
    <h6 class="nav-header">@Model.MainMenu.DisplayName</h6>
</li>
@foreach (var menuItem in Model.MainMenu.Items)
{
    @if (menuItem.Items.IsNullOrEmpty())
    {

        <li class="nav-item">
            <a class="nav-link @(Model.ActiveMenuItemName == menuItem.Name ? "active" : "")" href="@calculateMenuUrl(menuItem.Url)">
                @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                {
                    <i class="batch-icon batch-icon-browser-alt @menuItem.Icon"></i>
                }
                @menuItem.DisplayName <span class="sr-only">(current)</span>
            </a>
        </li>
    }
    else
    {
        <li class="nav-item">
            @if (!!string.IsNullOrWhiteSpace(menuItem.Icon))
            {
                <a class="nav-link nav-parent active" href="#">

                    <i class="batch-icon batch-icon-layout-content-left @menuItem.Icon "></i>
                    @menuItem.DisplayName
                </a>
            }
            else
            {

            }
            <a href="javascript:void(0);" class="nav-link nav-parent">
                @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                {
                    <i class="batch-icon batch-icon-layout-content-left @menuItem.Icon"></i>
                }
                <span>@menuItem.DisplayName</span>
            </a>
            <ul class="nav nav-pills flex-column">
                @foreach (var subMenuItem in menuItem.Items)
                {
                    <li class="nav-item">
                        @if (subMenuItem.Items.IsNullOrEmpty())
                        {
                            <a class="nav-link  @(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")"
                               href="@calculateMenuUrl(subMenuItem.Url)">
                                @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                {
                                    <i class="batch-icon batch-icon-layout-content-left @subMenuItem.Icon"></i>
                                }
                                @subMenuItem.DisplayName
                            </a>
                        }
                        else
                        {
                            <a href="javascript:void(0);" class="nav-link nav-parent">
                                @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                {
                                    <i class="batch-icon batch-icon-layout-content-left @subMenuItem.Icon"></i>
                                }
                                <span>@subMenuItem.DisplayName</span>
                            </a>
                            <ul class="nav nav-pills flex-column">
                                @foreach (var subSubMenuItem in subMenuItem.Items)
                                {
                                    <li class="nav-item">
                                        <a class="nav-link @(Model.ActiveMenuItemName == subSubMenuItem.Name ? "active" : "")" href="@calculateMenuUrl(subSubMenuItem.Url)">
                                            <i class="batch-icon batch-icon-layout-content-left @subSubMenuItem.Icon"></i>
                                            @subSubMenuItem.DisplayName
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
        </li>
    }
}



@*<div class="menu">
        <ul class="list">
            @foreach (var menuItem in Model.MainMenu.Items)
            {
                <li class="@(Model.ActiveMenuItemName == menuItem.Name ? "active" : "")">
                    @if (menuItem.Items.IsNullOrEmpty())
                    {
                        <a href="@calculateMenuUrl(menuItem.Url)">
                            @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                            {
                                <i class="material-icons">@menuItem.Icon</i>
                            }
                            <span>@menuItem.DisplayName</span>
                        </a>
                    }
                    else
                    {
                        <a href="javascript:void(0);" class="menu-toggle">
                            @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                            {
                                <i class="material-icons">@menuItem.Icon</i>
                            }
                            <span>@menuItem.DisplayName</span>
                        </a>
                        <ul class="ml-menu">
                            @foreach (var subMenuItem in menuItem.Items)
                            {
                                <li class="@(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")">
                                    @if (subMenuItem.Items.IsNullOrEmpty())
                                    {
                                        <a href="@calculateMenuUrl(subMenuItem.Url)">
                                            @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                            {
                                                <i class="material-icons">@subMenuItem.Icon</i>
                                            }
                                            <span>@subMenuItem.DisplayName</span>
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="javascript:void(0);" class="menu-toggle">
                                            @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                            {
                                                <i class="material-icons">@subMenuItem.Icon</i>
                                            }
                                            <span>@subMenuItem.DisplayName</span>
                                        </a>
                                        <ul class="ml-menu">
                                            @foreach (var subSubMenuItem in subMenuItem.Items)
                                            {
                                                <li class="@(Model.ActiveMenuItemName == subSubMenuItem.Name ? "active" : "")">
                                                    <a href="@calculateMenuUrl(subSubMenuItem.Url)">
                                                        @subSubMenuItem.DisplayName
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }
                </li>
            }
        </ul>
    </div>*@
